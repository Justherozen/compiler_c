string info[100];
string class[100];
string leading_course[100];
float credit[100];
float grade[100];
int has_grade[100];
int is_f[100];

int strcmp(string a,string b){
    char c;
    char d;
    int i;
    i = 0;
    while(i<256){
        c = a[i];
        d = b[i];
        if(c!=d){
            return 1;
        }
        i = i+1;
    }
    return 0;
}

int main()
{
   string tmp;
   string tmp_class;
   string tmp_lc;
   char sep;
   char base;
   char tmpchar;
   char newline;
   int flag1;
   int flag2;
   int flag3;
   int line;
   int cnt1;
   int cnt2;
   int cnt3;
   int part;
   float total_credit;
   float try_credit;
   float avg_grade;
   float total_grade;
   float tmp_credit;

   total_credit = 0;
   try_credit = 0;
   total_grade = 0;

   base = '0';
   cnt1 = 0;
   cnt2 = 0;
   cnt3 = 0;
   part = 3;
   line = 0;
   flag1 = 0;
   flag2 = 0;

   scanf(tmpchar);
    while(tmpchar != newline){     
        scanfstring(tmp);
        tmp_class[cnt2] = tmpchar;
        cnt2 = cnt2 + 1;
        sep = tmp[cnt1];
        if(part == 3 && sep!='|'){
            while(sep!='|'){
                tmp_class[cnt2] = sep;
                cnt2 = cnt2 + 1;
                cnt1 = cnt1 + 1;
                sep = tmp[cnt1];
            }
            part = part-1;
            class[line] = tmp_class;
            cnt2 = 0;
            tmp_class = "00"; 
        }
        if(part == 2 && sep =='|'){
            cnt1 = cnt1+1;
            sep = tmp[cnt1];
            tmp_credit = sep - base;
            credit[line] = tmp_credit;
            cnt1 = cnt1 + 1;
            part = part - 1;
            cnt1 = cnt1 + 1;
            sep = tmp[cnt1];
        }
        if(part == 1 && sep!='|'){
            while(sep!='|'){
                tmp_lc[cnt2] = sep;
                cnt2 = cnt2 + 1;
                cnt1 = cnt1 + 1;
                sep = tmp[cnt1];
            }
            part = part-1;
            leading_course[line] = tmp_lc;
            cnt2 = 0;
            tmp_lc = "00";
        }
        else if(part == 1&& sep =='|'){
                leading_course[line] = "";
                part = part-1;
        }
        if(part == 0&& sep =='|'){
            cnt1 = cnt1 + 1;
            sep = tmp[cnt1];
            if(sep == 'A'){
                grade[line] = 4.0;
                is_f[line] = 0;
                has_grade[line] = 1;
            }
            else if(sep == 'B'){
                grade[line] = 3.0;
                is_f[line] = 0;
                has_grade[line] = 1;
            }
            else if(sep == 'C'){
                grade[line] = 2.0;
                is_f[line] = 0;
                has_grade[line] = 1;
            }
            else if(sep == 'D'){
                grade[line] = 1.0;
                is_f[line] = 0;
                has_grade[line] = 1;
            }
            else if(sep == 'F'){
                grade[line] = 0.0;
                is_f[line] = 1;
                has_grade[line] = 1;
            }
            else{
                grade[line] = 0.0;
                is_f[line] = 0;
                has_grade[line] = 0;
            }
            cnt1 = 0;
        }
        line = line + 1;
        scanf(newline);
        scanf(tmpchar);
    }


    while(cnt1 < line){
        if(has_grade[cnt1]==1 && is_f[cnt1]==0){
            try_credit = try_credit + credit[cnt1];
            total_credit = total_credit + credit[cnt1];
            done_credit = done_credit + credit[cnt1];
            total_grade = total_grade + credit[cnt1]*grade[cnt1];
        }
        else if(has_grade[cnt1]==1 && is_f[cnt1]==1){
            total_credit = total_credit + credit[cnt1];
            try_credit = try_credit + credit[cnt1];
        }
        else{
            total_credit = total_credit + credit[cnt1];
        }
        cnt1 = cnt1 + 1;
    }
    cnt1 = 0;


    tmp_class = class[0];
    printstring(tmp_class);
    tmp_credit = credit[0];
    printf(tmp_credit);
    tmp_lc = leading_course[0];
    printstring(tmp_lc);
    printf(grade[0]);
    return 0;
}
